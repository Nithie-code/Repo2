 
 #imports
 import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('D:/Datasets/creditcard.csv')
print(df.head())
print(df['Class'].value_counts())
print(pd.value_counts(df['Class']).plot.bar())
# plt.show()
print('Nbr of Column :', len(df.columns))
# step :Create an ANN
# step2:Weights handling Techniques to solve unbalanced Dataset
# Creste an ANN
X = df.iloc[:, 1:30]
y = df.iloc[:, -1]
print(X.head())
print(y.head())

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)
print("Nr Y_train:\n", y_train.value_counts())
print("Nr y_test:\n ", y_test.value_counts())

# Step 1
import tensorflow
from tensorflow.keras.layers import Dense
from tensorflow.keras.models import Sequential

len(X.columns)
n_inputs = 29
#model
model = Sequential()
model.add(Dense(50, input_dim=n_inputs, activation='relu', kernel_initializer='he_normal'))
model.add(Dense(1, activation='sigmoid'))
model.compile(loss='binary_crossentropy', optimizer='adam')
model.fit(x_train, y_train, epochs=50)
from sklearn.metrics import roc_auc_score

y_pred1 = model.predict(x_test)
print(roc_auc_score(y_test, y_pred1))
